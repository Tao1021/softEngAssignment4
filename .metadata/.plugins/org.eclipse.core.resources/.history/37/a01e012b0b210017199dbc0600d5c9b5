import json
import datetime
import time
import pandas as pd
import numpy as np

def make_chart():
    with open('test_json.json') as data_file:
        data = json.load(data_file)
        newData = []
        for i in range(0, len(data['chdata'])):
            newData.append(data['chdata'][i])
        df = pd.DataFrame(data=newData)
        df['avgVacency'] = round(df[2] / (df[3] + df[2]), 2)
         
        # convert string time to datetime for easy manipulation
        end = datetime.time(0,0,0)
        start = datetime.time(6,0,0)
        df[1] = pd.to_datetime(df[1]).dt.time
        
#         if df[1].iloc[0] > end and df[1].iloc[0] < start:
#             df = df.drop(df.iloc[i])
        print(df[1][0])
        for i, row in df.iterrows():
            if df[1][0] > end and df[1][0] < start:
                print(df[1][0])
#                 df.drop(df.index[i], inplace=True) 
            
#                 df.drop(df.iloc[i])
#                 print(i, "+++++", row)
#                 df = df.drop(df.index[i])
#             
#                 df = df.drop(df.index[i])

#         if df[1].iloc[0] > end and df[1].iloc[0] < start:
#                 df.drop(df.index[i])        
        
#         for i in df:
#             if df[1].iloc[0] > end and df[1].iloc[0] < start:
#                 df.drop(df.index[i])




#         
#         for i in df:
#             if pd.DatetimeIndex(df[1][i]).time < start and pd.DatetimeIndex(df[1][i]).time > end:
#                 df.drop(df.index[i])
        
        
        print(df)
            
#         if df['time'][0] > datetime.datetime(end):
#             print('Yes')
            
        
#         newdf = []
#         for row in df:
#             if pd.DatetimeIndex(df[1]).time > pd.to_datetime('06:00:00'):
#                 newData.append(df[row])
#         print(df[1].time)
  
#         mask = df[(df['time'] > '06:00:00') and (df['time'] <= '00:00:00')]

#         df = df.groupby([df[1].dt.hour, pd.TimeGrouper('3H')])


        
        # create dummies for the three hour time intervals from 06:00 to 00:00
        
        df['interval0'] = 0
        df['interval1'] = 0
        df['interval2'] = 0
        df['interval3'] = 0
        df['interval4'] = 0
        df['interval5'] = 0
        
        




#    x = df.groupby(pd.TimeGrouper(key=1, freq='3H')).mean()
   
#    x = df.groupby(pd.TimeGrouper(key=1, freq='3H'))[2].mean()
     
#    x = df.groupby([df[1].dt.hour, pd.TimeGrouper('3H')]).mean()
   
#    x = df.groupby(pd.TimeGrouper(key=1, freq='3H')).aggregate(np.mean)
   
#    x = df.groupby(1, pd.TimeGrouper('3H')])[]]
#    df.groupby(['product', pd.TimeGrouper('1M')])['sales'].sum()
   
#    df.groupby([df[1],pd.TimeGrouper(freq='3')])
#    print(df)
        return None
    
make_chart()